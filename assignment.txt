#include<stdio.h>
#include<conio.h>
void insert_record();
void display_record();
void search_record();
void del_record();
void update_record();
void short_record();
struct student{
    int roll;
    char sec[10];
    char name[40];
    int marks;
    float grade;
};
    struct student s;
    
void main(){
    int ch;
    clrscr;
    
    while(ch!=7){
        clrscr();
        printf("\t************************************************\n");
        printf("\tWELCOME TO STUDENT MANAGEMENT PROGRAM\n");
        printf("\t************************************************\n");
            printf("\t****AVAILABLE FUNCTIONALITIES****\n\n\n");
            printf("\t\t1: Insert student record\n");
            printf("\t\t2: Display student record\n");
            printf("\t\t3: Search student record\n");
            printf("\t\t4: Delete student record\n");
            printf("\t\t5: Update student record\n");
            printf("\t\t6: Sort student record\n");
            printf("\t\t7: Exit\n");
            printf("\t\tEnter Your choice : ");
            scanf("%d",&ch);
            switch(ch){
                case 1: clrscr();
                        insert_record();
                        break;
                case 2: clrscr();
                        display_record();
                        break;
                case 3: clrscr();
                        search_record();
                        break;
                case 4: clrscr();
                        del_record();
                        break;
                case 5: clrscr();
                        update_record();
                        break;
                case 6: clrscr();
                        sort_record();
                        break;
                case 7: exit(1);
                default : clrscr();
                        printf("Invalid choice");
                        break;
            }
            
            printf("\n\t\tPress any key to continue");
            getch();   
    }
}


void insert_record(){
    FILE *fp;
    
    fp=fopen("stu.txt","ab+");
    
    if(fp==NULL){
        printf("\n\t\tERROR: cannot open file");
        return;
    }
    
    printf("\n");
    display_record();
    
    printf("\n\t\t**** Enter New Student Data ****\n\n");
    printf("\n\t\tEnter Student roll number : ");
    scanf("%d",&s.roll);
    fflush(stdin);
    printf("\n\t\tEnter Student Name : ");
    gets(s.name);
    printf("\n\t\tEnter Student Section : ");
    gets(s.sec);
    printf("\n\t\tEnter Student Total Marks : ");
    scanf("%d",&s.grade);
    fwrite(&s,sizeof(s),1,fp);
    
    printf("\n\t\tStudent record inserted successfully");
    
    fclose(fp);
    printf("\n\t\tUpdated record\n\n");
    display_record();
    
    
}


void display_record(){
    FILE *fp;
    fp=fopen("stu.txt","rb");

    if(fp==NULL){
        printf("\n\t\tError : Cannot open the file ");
        return;
    }    
    printf("\n\t\t****Student details are as follows****\n");
    printf("\nRoll.No\tName Of Student\tSection\tMarks\tGrades\n\n");
    
    while(fread(&s,sizeof(s),1,fp)==1){
        printf("%d\t%s\t%s  \t\t%d\t\t%f\n",s.roll,s.name,s.sec,s.marks,s.grades);
    }
        fclose(fp);
}

 
void search_record(){
    int ro,flag=0;
    FILE *fp;
    fp=fopen("stu.txt","rb");

    if(fp==NULL){
        printf("\n\t\tError : Cannot open the file ");
        return;
    }    
    
    printf("\n\t\tENTER STUDENT ROLL NUMBER TO BE SEARCHED");
    scanf("%d",&ro);
    while(fread(&s,sizeof(s),1,fp)>0 && flag==0){
        
        if(s.roll==ro){
            flag=1;
            printf("\nRoll.No\tName Of Student\tSection\tMarks\tGrades\n\n");
             printf("%d\t%s\t%s  \t\t%d\t\t%f\n",s.roll,s.name,s.sec,s.marks,s.grades);
            
        }
        if(flag==0)
            printf("\n\n\t\tNO SUCH RECORD FOUND");
        
    }
    
    fclose(rb);
    
}


void del_record(){
    char name[40];
    unsigned short int flag=0;
    FILE *fp,*ft;
    fp=fopen("stu.txt","rb");
    if(fp==NULL){
        printf("\n\t\tError cannot open file");
        return;
    }
    
    printf("\n\t\t****Previous stored data****");
    display_record();
    printf("\n\t\tEnter the student name to be deleted");
    scanf("%d",name);
    ft=fopen("stu1.txt","ab+");
    
    while(fread(&s,sizeof(s),1,fp)==1){
        if(strcmp(name,s.name)!=0){
            printf("\n\t\tRecord deleted successfully\n");
            fwrite(&s,sizeof(s),1,ft);
        }
        else
            flag=1;
    }
    if(flag==0){
        printf("\n\t\tNo such record found");
    }
    
    fclose(fp);
    fclose(ft);
    remove("stu.txt");
    rename("stu1.txt","stu.txt");
    printf("\n\t\tUpdated record \n");
    display_record();  
}


void update_record(){
    int ro,flag=0;
     FILE *fp,*ft;
    fp=fopen("stu.txt","rb");
    if(fp==NULL){
        printf("\n\t\tError cannot open file");
        return;
    }
    
    printf("\n\t\tEnter the roll number of student ");
    scanf("%d",&ro);
    printf("\n\t\t*** Previously stored data ");
    
    while(fread(&s,sizeof(s),1,fp)>0 && flag==0){
        if(s.roll==ro){
            flag=1;
           printf("\nRoll.No\tName Of Student\tSection\tMarks\tGrades\n\n");
             printf("%d\t%s\t%s  \t\t%d\t\t%f\n",s.roll,s.name,s.sec,s.marks,s.grades);
             printf("\n\t\tEnter the new record");
             
             printf("\n\t\tUpdated student roll no : ");
             scanf("%d",&s.roll);
             fflush(stdin);
             printf("\n\t\tupdated student name : ");
             gets(s.name);
             printf("\n\t\tupdated student section : ");
             gets(s.sec);
             printf("\n\t\tupdated student marks : ");
             scanf("%d",&s.marks);
             printf("\n\t\tupdated student grade : ");
             scanf("%f",&s.grade);
             fseek(fp,-(long)sizeof(s),1);
             fwrite(&s,sizeof(s),1,fp);
             printf("\n\t\trecord updated successfully");
        }
        
    }
    
    if(flag==0)
        printf("\n\t\tError : Something went wronh");
        
        
        fclose(fp);
}




void sort(){
    struct student temp;
    struct student arr[50];
    
    int i,j,k=0;
     FILE *fp,*ft;
    fp=fopen("stu.txt","rb");
    if(fp==NULL){
        printf("\n\t\tError cannot open file");
        return;
    }
i=0;
    while(fread(&arr[i],sizeof(arr[i]),1,fp)==1){
        
        i++;k++;
    }
    
    
    for(i=0;i<k;i++){
        for(j=0;j<k-i-1;j++){
            if(arr[j].roll>arr[j+1].roll){
                arr[j]=arr[j]^arr[j+1];
                arr[j+1]=arr[j]^arr[j+1];
                arr[j]=arr[j]^arr[j+1];
            }
        }
    }
    
    printf("\n\t\tAfter sorting student details ");
    
    for(i=0;i<k;i++){
        printf("\nRoll.No\tName Of Student\tSection\tMarks\tGrades\n\n");
             printf("%d\t%s\t%s  \t\t%d\t\t%f\n",arr[i].roll,arr[i].name,arr[i].sec,arr[i].marks,arr[i].grades);
    }
    
    
    
    
    
    
    
    
    fclose(fp);
}














